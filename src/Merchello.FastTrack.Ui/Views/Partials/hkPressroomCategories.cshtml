@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@using ClientDependency.Core.Mvc;
@using Umbraco.Web

@{
	bool selected = false;
}
@functions {
	public string GetChildHtml(IPublishedContent category, int level, string seasonId, int selectedCategory, out bool selected)
	{
		System.Text.StringBuilder html = new System.Text.StringBuilder();
		selected = false;

		foreach (IPublishedContent item in category.Children("pressroom_category"))
		{
			bool itemSelected = (selectedCategory != 0 && item.Id == selectedCategory);
			string ulClass = "";

			/* disable the products root */
			if (item.Id == 20130) // make non existing Id to restore the product tab
			{
				bool childSelected = false;
				string childHtml = GetChildHtml(item, level, seasonId, selectedCategory, out childSelected);
				selected = selected || childSelected;
				html.Append(childHtml);
			}
			else if (item.Children("pressroom_category").Any())
			{
				string dropdownClass = "";
				bool childSelected = false;
				string childHtml = GetChildHtml(item, level + 1, seasonId, selectedCategory, out childSelected);
				itemSelected = itemSelected || childSelected;

				if (itemSelected)
				{
					ulClass = "cat-link-open";
					dropdownClass = "pres-dropdown-open";
				}

				string marginTop = "";
				if (item.Parent.Id != 20130 && level == 0)
				{
					marginTop = "style='margin-top:1rem;'";
				}

                string logoHideContent = "";
                if (item.Id == 26475) {
                    logoHideContent = "LogoHideDrpdwnContent";
                }

				html.AppendFormat("<li class='pres-cat-link lvl{0} {1}'>", level, logoHideContent);
				html.AppendFormat("<div class='cat-link-inner-left' {3}><a href='?category={0}&se={1}' class='pres-cat-head'>{2}</a></div>", item.Id, seasonId, item.Name, marginTop);
				html.AppendFormat("<div class='cat-link-inner-right' {1}><p class='pres-cat-dropdown {0}'>&nbsp;</p></div>", dropdownClass, marginTop);

				html.AppendFormat("<ul class='{0}'>", ulClass);
				html.Append(childHtml);
				html.AppendFormat("</ul>");

				html.AppendFormat("</li>");
			}
			else
			{
				if (itemSelected)
				{
					ulClass = "cat-link-open";
				}
				html.AppendFormat("<li class='pres-cat-link pres-cat-link-endpoint {3} lvl{4}'><a href='?category={0}&se={1}'>{2}</a></li>", item.Id, seasonId, item.Name, ulClass, level);
			}


			selected = selected || itemSelected;

		}

		return html.ToString();
	}
}

@{
	Html.RequiresCss("~/Css/vwa_pressroom.css", 20);
	Html.RequiresJs("~/Scripts/vwa_pressroom.js", 20);

	IPublishedContent categoryHome = Umbraco.TypedContent(20124);
	IPublishedContent filterHome = Umbraco.TypedContent(20125);
	int productsHomeId = 20130;
	string seasonHomeId = "20125";
	string seasonFirstFilter = Umbraco.TypedContent(seasonHomeId).Children.Any() ? Umbraco.TypedContent(seasonHomeId).FirstChild().Id.ToString() : "";
	string seasonId = Request["se"] ?? seasonFirstFilter;

	int ctgryInt = 0;

	if (!int.TryParse(Request["category"], out ctgryInt))
	{
		ctgryInt = productsHomeId;
	}

	if (String.IsNullOrEmpty(seasonId))
	{
		seasonId = seasonFirstFilter;
	}
	string logoBool = Request["logo"] ?? "";
	string documentsBool = Request["docs"] ?? "";

}

<ul class="cat-link-open-force">
	@Html.Raw(GetChildHtml(categoryHome, 0, seasonId, ctgryInt, out selected))
</ul>

@* END Category navigation *@

@* Style navigation*@
@*
	<ul class="cat-link-open-force">
		<li class="pres-cat-link">

			<div class="cat-link-inner-left">
				<p class="pres-cat-head">Style</p>
			</div>
			<div class="cat-link-inner-right">
				<p class="pres-cat-dropdown pres-drpdwn-toggle pres-dropdown-open">&nbsp;</p>
			</div>

			<ul class="cat-link-open">
				<li>
					<form action = "" class="pers-style-form">
						<input id = "style-form-bckgrclr1" type="radio" name="background-color:" value="#ffffff" style="margin-right:8px;" checked>
						<label for="style-form-bckgrclr1">White background</label>
						<br>
						<input id = "style-form-bckgrclr2" type= "radio" name= "background-color:" value= "#f4f4f4" style= "margin-right:8px;" >
						< label for="style-form-bckgrclr2">Grey background</label>
						<br>
						<input id = "style-form-bckgrclr3" type= "radio" name= "background-color:" value= "transparent" style= "margin-right:8px;" >
						< label for="style-form-bckgrclr3">Transparent background</label>
						<br>
					</form>
				</li>
			</ul>
		</li>
	</ul>
*@
@* END Style navigation*@

@* Logo navigation *@
@*<ul class="cat-link-open-force">
	<li class="pres-cat-link">

		<div class="cat-link-inner-left">
			@{
				string logoUrl = "?category=" + ctgryInt.ToString() + "&se=" + seasonId + "&logo=1";
			}
			<a href="@logoUrl" class="pres-cat-head">Logo</a>
		</div>
		<div class="cat-link-inner-right">
			<p class="pres-cat-dropdown pres-drpdwn-toggle" style="visibility:hidden">&nbsp;</p>
		</div>
	</li>

</ul>*@
@* END Logo navigation *@


@* Quality navigation*@
<ul class="cat-link-open-force">
	<li class="pres-cat-link">

		<div class="cat-link-inner-left">
			<p class="pres-cat-head">Quality</p>
		</div>
		<div class="cat-link-inner-right">
			<p class="pres-cat-dropdown pres-drpdwn-toggle pres-dropdown-open">&nbsp;</p>
		</div>
		<ul class="cat-link-open">
			<li>
				<form action="">
					<input id="quality-form-quality1" type="radio" name="quality" value="highResolution" style="margin-right:8px;" checked>
					<label for="quality-form-quality1">High quality</label>
					<br>
					<input id="quality-form-quality2" type="radio" name="quality" value="webResolution" style="margin-right:8px;">
					<label for="quality-form-quality2">Web quality</label>
					<br>
				</form>
			</li>
		</ul>

	</li>
</ul>
@* END Quality navigation*@

@* Season navigation *@
@if (filterHome.Children().Any())
{
	<ul class="cat-link-open-force">
		<li class="pres-cat-link">

			<div class="cat-link-inner-left">
				<p class="pres-cat-head">Season</p>
			</div>
			<div class="cat-link-inner-right">
				<p class="pres-cat-dropdown pres-drpdwn-toggle pres-dropdown-open">&nbsp;</p>
			</div>
			<ul class="cat-link-open">
				<li>
					<form>
						@{
							bool frstRun = true;
							int filterRadioId = 1;
						}

						@foreach (IPublishedContent filter in filterHome.Children())
						{
							string filterName = filter.GetPropertyValue<string>("filterName");
							string radioUrl = "?category=" + ctgryInt.ToString() + "&se=" + filter.Id.ToString();
							string strChecked = "false";

							if (filter.Id.ToString() == seasonId || (String.IsNullOrEmpty(seasonId) && frstRun == true))
							{
								frstRun = false;
								strChecked = "checked";
							}

							<a href="@radioUrl"><input id="filter-form-radio@(filterRadioId)" type="radio" name="season" value="@filterName" @strChecked style="margin-right:8px;"><label for="filter-form-radio@filterRadioId">@filterName</label></a><br>
							filterRadioId++;
						}
					</form>
				</li>
			</ul>
		</li>

	</ul>
}
@* END Season navigation *@
