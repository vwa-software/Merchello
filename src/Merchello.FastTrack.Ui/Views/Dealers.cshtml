@inherits Umbraco.Web.Mvc.UmbracoTemplatePage<ContentModels.Dealer>
@using ContentModels = Umbraco.Web.PublishedContentModels;

@{

	Layout = "Master.cshtml";


	string mapsSettings = "{ZoomToGeoLocation : ";
	if (this.Model.Content.HasProperty("zoomInOpEigenLocatie") && this.Model.Content.GetPropertyValue<bool>("zoomInOpEigenLocatie"))
	{
		mapsSettings += "true";
	}
	else
	{
		mapsSettings += "false";
	}
	mapsSettings += ",ZoomToGeoLocationLevel : ";
	if (this.Model.Content.HasValue("zoomLevel"))
	{
		mapsSettings += this.Model.Content.GetPropertyValue<int>("zoomLevel").ToString();
	}
	else
	{
		mapsSettings += 10;
	}
	mapsSettings += "}";
}

@section StyleSheets{
	<link rel="stylesheet" type="text/css" href="~/Css/vwa_maps.css">
}

<style>
	.map-frame {
		width: 100%;
		height: 100%;
		position: relative;
	}

	.map-content {
		z-index: 10;
		position: absolute;
		top: 50px;
		left: 50px;
		width: 390px;
		background-color: black;
		color: #FFF;
	}

	.btn-primary {
		background: #0094ff;
	}
</style>
<div class="vwa_map_dealers" id="vwa_map_dealers">
	<div id="map" style="height:480px;"></div>
</div>
<div class="container-fluid hk_dealers" id="hk_dealers">
	<div class="row">

		<div class="container">

        testfsdf

			<form action="@(Model.Content.Url())#vwa_map_dealers" class="form-inline search" id="hk_search-input" method="get" novalidate="novalidate" _lpchecked="1">
				<div class="row">

					<div class="col-md-12">
						<span class="hk_lbl-TypeStore">Type of store:</span>
						<input type="hidden" id="isWebStore" name="isWebStore" value="@(isWebStore ? "1" : "0")" />
						<input type="hidden" id="isStore" name="isStore" value="@(isStore ? "1" : "0")" />
						<div class="btn-group btn-stores" role="group" aria-label="Select the store type">
							<div>
								<button type="button" id="btnIsWebStore" class="btn @(isWebStore ? "btn-primary" : "btn-default" )"><i class="fas fa-shopping-cart"></i> Webstore</button>
								<button type="button" id="btnIsStore" class="btn @(isStore ? "btn-primary" : "btn-default" )"><i class="fas fa-store-alt"></i> Store</button>
							</div>
						</div>
					</div>
					<div class="form-group col-md-12">
						<div class="input-group">
							<input type="text" class="form-control" value="@search" placeholder="Search" id="etc-search-term" name="q">
							<span class="input-group-addon">
								<button class="" id="btnSubmit" type="submit"><i class="glyphicon fa fa-search "></i></button>
							</span>
						</div>
					</div>
				</div>
			</form>


			@if (searchResultIsEmpty)
			{
				<div class="row">
					<div class="empty well-sm vwa_noresult">
						<h3>No results found. Find a HKliving dealer in the area here!</h3>
					</div>
				</div>
			}
			<div class="hk_dealers_list">
				<div class="row">
					@foreach (var listdealer in Dealers)

					{
						var Postalcode = listdealer.Postcode;
						var Comma = ",";

						<div class="col-md-4 col-sm-6 col-xl-3">
							<div class="wrapper_dealer">
								<h2>@(listdealer.GetPropertyValue<string>("titleMain"))</h2>
								<p>@listdealer.Adres</p>
								<p>
									@Postalcode@if (Postalcode.Count() > 0)
									{@Comma} @listdealer.Plaats
								</p>
								<p>@listdealer.Land</p>

								@{

									string websiteAdress = listdealer.GetPropertyValue<string>("Website");

									string name = System.Text.RegularExpressions.Regex.Replace(websiteAdress, @"https?://(www\.)?", "");

									if (!websiteAdress.StartsWith("http"))
									{
										websiteAdress = "http://" + websiteAdress;
									}

									if (!string.IsNullOrWhiteSpace(websiteAdress))
									{

										<p><a target="_blank" href="@Html.Raw(websiteAdress)">@(name)</a></p>

									}
								}
								@* <p><a href="#" class="dealer_website">hkliving.nl</a></p>*@
							</div>
						</div>
					}
				</div>
			</div>
		</div>

	</div>
</div>

@section Scripts {
	<!-- Custom JS maps -->
	<script src="~/Scripts/vwa_maps.js"></script>
	<script src="https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js"></script>
	<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDaGmDGmRqjM4K-YEm_zJQ4KKT44OAKPO4&callback=initMap&libraries=geometry" async defer></script>


	<script>

		var data = null;
		var gsLoaded = false;
		var markersLoaded = false;
		var _markers = null;

		function initMap() {
			gsLoaded = true;
			if (markersLoaded)
				loadMarkers(_markers)
		}

		function loadMarkers(markers) {
			if (gsLoaded)	
				initMapjs( @(string.IsNullOrEmpty(search) ? "false" : "true" ), @(mapsSettings), _markers ); 
		}

		// Data for the markers consisting of a name, a LatLng and a zIndex for the
		// order in which these markers should display on top of each other.
		var alldealers = $.ajax({
			dataType: "json",
			url: '@Url.Action("GetStoresAsJson","StoreLocator")',
			data: { 'id': @(this.Model.Content.Id) },
			success: function (result) {
				markersLoaded = true;
				_markers = result;
				loadMarkers();
			}
		});




    //  initMap();

	</script>
}